#!/bin/sh

# check for and use pkg-config package $2 with CONFIG_ var $3
do_pkg_config()
{
    if pkg-config $2 2>/dev/null; then
        CFLAGS="${CFLAGS} `pkg-config --cflags $2`"
        LDFLAGS="${LDFLAGS} `pkg-config --libs $2`"
        if [ "$3" ]; then
            echo "#define $3" >> config.h
            echo "$3=yes" >> config.mk
        fi
        echo "$1 found"
    else
        echo "$1 or its dev package not found"
        if [ ! "$3" ]; then
            echo "Required package not found, cannot continue"
            rm -f config.mk config.h
            exit 1
        fi
    fi
}

do_export_variable()
{
    if [ "$2" ]; then
        echo "$1=$(eval echo $2)" >> config.mk
    else
        echo "$1=$(eval echo \$$1)" >> config.mk
    fi

    if [ "$3" ]; then
        echo "#define $1 \"$(eval echo $3)\"" >> config.h
    else
        echo "#define $1 \"$(eval echo \$$1)\"" >> config.h
    fi
}

do_test()
{
    if make -f Makefile.tests $1 1> /dev/null 2> /dev/null;  then
        echo $2
        if [ "$4" ]; then
            echo "#define $4" >> config.h
            echo "$4=yes" >> config.mk
        fi
    else
        echo $3
        if [ ! "$4" ]; then
            echo "Cannot continue"
            rm -f config.mk config.h
            exit 1
        fi
    fi
}

[ "${PREFIX}" ] || PREFIX=/usr/local
PLUGINS_PATH=${PREFIX}/lib/shairport/plugins
PLUGIN_EXT=.so

LDFLAGS="${LDFLAGS} -lm -lpthread"

echo Configuring Shairport

rm -f config.mk config.h

echo "// automatically generated file" > config.h



PLATFORM=$(uname -s | tr '[:upper:]' '[:lower:]')
[ "${PREFIX}" ] || PREFIX=/usr/local
PREFIX_PLUGINS=${PREFIX}/lib/shairport/plugins
PLUGIN_EXT=.so

LDFLAGS="${LDFLAGS} -lm -lpthread"

do_pkg_config OpenSSL       openssl
do_pkg_config libao         ao              CONFIG_AO
do_pkg_config PulseAudio    libpulse-simple CONFIG_PULSE
do_pkg_config ALSA          alsa            CONFIG_ALSA
do_pkg_config Avahi\ client avahi-client    CONFIG_AVAHI

do_test test_getopt  "getopt.h found" "getopt.h not found (or compiler broken), using our own getopt_long." CONFIG_HAVE_GETOPT_H

do_export_variable CONFIG_DYNAMIC_PLUGINS yes ""
do_export_variable PLATFORM
do_export_variable PREFIX
do_export_variable PREFIX_PLUGINS
do_export_variable PLUGIN_EXT

echo "CFLAGS+=${CFLAGS}" >> config.mk
echo "LDFLAGS+=${LDFLAGS}" >> config.mk

echo CFLAGS: ${CFLAGS}
echo LDFLAGS: ${LDFLAGS}
echo PREFIX: ${PREFIX}

echo "Configure successful. You may now build with 'make'"
